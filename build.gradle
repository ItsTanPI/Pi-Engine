plugins {
    id 'java'
}

group = 'org.example'
version = '1.0'

ext {
    lwjglVersion = "3.3.3"
    lwjglNatives = "natives-windows" // Change to "natives-linux" or "natives-macos" for other OS
    jomlVersion = "1.10.0"
    jomlPrimVersion = "1.10.0"
}

repositories {
    mavenCentral()
}

dependencies {
    // LWJGL BOM for consistent versioning
    implementation platform("org.lwjgl:lwjgl-bom:$lwjglVersion")

    // LWJGL core
    implementation "org.lwjgl:lwjgl"
    implementation "org.lwjgl:lwjgl-glfw"
    implementation "org.lwjgl:lwjgl-opengl"
    implementation "org.lwjgl:lwjgl-opengles"
    implementation "org.lwjgl:lwjgl-stb"

    // LWJGL natives
    runtimeOnly "org.lwjgl:lwjgl::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-glfw::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-opengl::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-opengles::$lwjglNatives"
    runtimeOnly "org.lwjgl:lwjgl-stb::$lwjglNatives"

    // Other libraries
    implementation "org.joml:joml:$jomlVersion"
    implementation "org.joml:joml-primitives:$jomlPrimVersion"
    implementation 'org.reflections:reflections:0.10.2'
    implementation 'org.slf4j:slf4j-nop:2.0.9'

    // ImGui
    implementation "io.github.spair:imgui-java-app:1.89.0"

    //JSON
    implementation 'com.google.code.gson:gson:2.10.1'
}

test {
    useJUnitPlatform()
}

jar {
    manifest {
        attributes(
            'Main-Class': 'org.PiEngine.Main'
        )
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }

    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}
